plugins {
	id 'org.springframework.boot' version '2.3.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'eclipse'
	id 'eclipse-wtp'
	id 'war'
	id 'jacoco'
}

group = 'com.anr'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

repositories {
	mavenCentral()
	jcenter()
}

project.ext {
	springBootArtifacts = [
	'spring-boot-starter',
	//'spring-boot-starter-test',
	'spring-boot-starter-aop',
	'spring-boot-starter-actuator',
	'spring-boot-starter-web',
	'spring-boot-starter-security'
	]
}

jacoco {
	toolVersion = '0.8.5'
	reportsDir = file("$buildDir/customJacRptDir")
}

dependencies {
	//springBootArtifacts.each { artifact ->
	//	implementation 'org.springframework.boot:$artifact'
	//}
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	
	implementation 'org.mongodb:mongodb-driver:3.8.2'
	//implementation 'io.springfox:springfox-boot-starter:3.0.0'
	//implementation 'io.springfox:springfox-swagger-ui:2.7.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.4.4'
	implementation 'net.jodah:failsafe:1.1.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.4.RELEASE'
	implementation 'com.google.guava:guava:29.0-jre'
	implementation 'com.google.code.gson:gson:2.8.6'
	implementation 'org.codehaus.jackson:jackson-core-asl:1.1.0'
	implementation 'commons-io:commons-io:2.7'
	implementation 'org.apache.commons:commons-lang3:3.11'
	implementation 'org.projectlombok:lombok'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		//exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'junit:junit:4.13'
	//testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
	//testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
	testImplementation 'org.hamcrest:hamcrest-all:1.3'
	testImplementation 'org.mockito:mockito-core:1.9.5'
	testImplementation 'com.tngtech.archunit:archunit:0.9.1'
}

//test {
//	useJUnitPlatform()
//}

jacocoTestReport {
  group "Reporting"
  reports {
    xml.enabled true
    csv.enabled true
    html.destination file("${buildDir}/reports/coverage")
  }
  afterEvaluate {
    classDirectories.from = files(classDirectories.files.collect {
      fileTree(dir: it, exclude:[
        "com/anr/model/**",
        "com/anr/logging/model/**",
      ])
    })
  }
}
